import * as readline from 'readline';

export class AIAssistant {
  private rl: readline.Interface;

  constructor() {
    this.rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });
  }

  async startChat(): Promise<void> {
    console.log('ü§ñ Assistente IA iniciado! Digite "sair" para encerrar.\n');
    
    while (true) {
      const question = await this.askQuestion('Voc√™: ');
      
      if (question.toLowerCase() === 'sair') {
        console.log('üëã At√© logo!');
        break;
      }

      const response = this.processQuestion(question);
      console.log(`ü§ñ IA: ${response}\n`);
    }
    
    this.rl.close();
  }

  private askQuestion(prompt: string): Promise<string> {
    return new Promise((resolve) => {
      this.rl.question(prompt, (answer) => {
        resolve(answer);
      });
    });
  }

  private processQuestion(question: string): string {
    const q = question.toLowerCase();

    // Programa√ß√£o
    if (q.includes('javascript') || q.includes('js')) {
      return 'JavaScript √© uma linguagem vers√°til para web e backend. Posso ajudar com sintaxe, conceitos ou exemplos espec√≠ficos!';
    }
    
    if (q.includes('typescript') || q.includes('ts')) {
      return 'TypeScript adiciona tipagem ao JavaScript. Oferece melhor IntelliSense e detec√ß√£o de erros em tempo de compila√ß√£o.';
    }

    if (q.includes('node') || q.includes('nodejs')) {
      return 'Node.js permite executar JavaScript no servidor. Ideal para APIs, CLIs e aplica√ß√µes backend.';
    }

    // Comandos/Ajuda
    if (q.includes('como') && q.includes('funciona')) {
      return 'Sou um assistente IA simples. Fa√ßa perguntas sobre programa√ß√£o, tecnologia ou pe√ßa ajuda com c√≥digo!';
    }

    if (q.includes('ajuda') || q.includes('help')) {
      return 'Posso ajudar com: JavaScript, TypeScript, Node.js, programa√ß√£o em geral, conceitos de desenvolvimento.';
    }

    // C√°lculos simples
    if (q.includes('+') || q.includes('-') || q.includes('*') || q.includes('/')) {
      try {
        const result = eval(q.replace(/[^0-9+\-*/().]/g, ''));
        return `Resultado: ${result}`;
      } catch {
        return 'N√£o consegui calcular isso. Use apenas n√∫meros e operadores b√°sicos (+, -, *, /).';
      }
    }

    // Respostas gerais
    if (q.includes('ol√°') || q.includes('oi')) {
      return 'Ol√°! Como posso ajudar voc√™ hoje?';
    }

    if (q.includes('obrigado') || q.includes('valeu')) {
      return 'De nada! Estou aqui para ajudar sempre que precisar.';
    }

    // Resposta padr√£o
    return 'Interessante pergunta! Embora eu seja um assistente simples, posso ajudar com programa√ß√£o, c√°lculos b√°sicos e conceitos de desenvolvimento. Seja mais espec√≠fico!';
  }
}